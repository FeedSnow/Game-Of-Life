#pragma once
#include "board.h"

namespace Patterns
{
	namespace StillLifes
	{

		Board* Block()
		{
			uint8_t pattern[] = {
				0,0,0,0,
				0,1,1,0,
				0,1,1,0,
				0,0,0,0
			};

			return new Board(4, 4, pattern);
		}

		Board* BiBlock()
		{
			uint8_t pattern[] = {
				0,0,0,0,0,0,0,
				0,1,1,0,1,1,0,
				0,1,1,0,1,1,0,
				0,0,0,0,0,0,0
			};

			return new Board(7, 4, pattern);
		}

		Board* Hive()
		{
			uint8_t pattern[] = {
				0,0,0,0,0,0,
				0,0,1,1,0,0,
				0,1,0,0,1,0,
				0,0,1,1,0,0,
				0,0,0,0,0,0
			};

			return new Board(6, 5, pattern);
		}

		Board* HoneyFarm()
		{
			uint8_t pattern[] = {
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
				0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,
				0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,
				0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,
				0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
				0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,
				0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			};

			return new Board(15, 15, pattern);
		}
	}

	namespace Oscillators
	{
		Board* Blinker()
		{
			uint8_t pattern[] = {
				0,1,0,
				0,1,0,
				0,1,0
			};

			return new Board(3, 3, pattern);
		}

		Board* Star()
		{
			uint8_t pattern[]{
				0,0,0,0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,1,0,0,0,0,0,0,
				0,0,0,0,0,1,1,1,0,0,0,0,0,
				0,0,0,1,1,1,0,1,1,1,0,0,0,
				0,0,0,1,0,0,0,0,0,1,0,0,0,
				0,0,1,1,0,0,0,0,0,1,1,0,0,
				0,1,1,0,0,0,0,0,0,0,1,1,0,
				0,0,1,1,0,0,0,0,0,1,1,0,0,
				0,0,0,1,0,0,0,0,0,1,0,0,0,
				0,0,0,1,1,1,0,1,1,1,0,0,0,
				0,0,0,0,0,1,1,1,0,0,0,0,0,
				0,0,0,0,0,0,1,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,0,0,0,
			};

			return new Board(13, 13, pattern);
		}

		Board* Cross()
		{
			uint8_t pattern[]{
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,1,1,1,1,0,0,0,
				0,0,0,1,0,0,1,0,0,0,
				0,1,1,1,0,0,1,1,1,0,
				0,1,0,0,0,0,0,0,1,0,
				0,1,0,0,0,0,0,0,1,0,
				0,1,1,1,0,0,1,1,1,0,
				0,0,0,1,0,0,1,0,0,0,
				0,0,0,1,1,1,1,0,0,0,
				0,0,0,0,0,0,0,0,0,0
			};

			return new Board(10, 10, pattern);
		}
	}

	namespace Spaceships
	{
		Board* Glider()
		{
			uint8_t pattern[]{
				0,0,0,0,0,
				0,0,1,0,0,
				0,0,0,1,0,
				0,1,1,1,0,
				0,0,0,0,0
			};

			return new Board(5, 5, pattern);
		}

		Board* LWSS()
		{
			uint8_t pattern[]{
				0,0,0,0,0,0,0,
				0,1,0,0,1,0,0,
				0,0,0,0,0,1,0,
				0,1,0,0,0,1,0,
				0,0,1,1,1,1,0,
				0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,
			};

			return new Board(7, 7, pattern);
		}

		Board* MWSS()
		{
			uint8_t pattern[]{
				0,0,0,0,0,0,0,0,
				0,0,0,1,0,0,0,0,
				0,1,0,0,0,1,0,0,
				0,0,0,0,0,0,1,0,
				0,1,0,0,0,0,1,0,
				0,0,1,1,1,1,1,0,
				0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,
			};

			return new Board(8, 9, pattern);
		}

		Board* HWSS()
		{
			uint8_t pattern[]{
				0,0,0,0,0,0,0,0,0,
				0,0,0,1,1,0,0,0,0,
				0,1,0,0,0,0,1,0,0,
				0,0,0,0,0,0,0,1,0,
				0,1,0,0,0,0,0,1,0,
				0,0,1,1,1,1,1,1,0,
				0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,
			};

			return new Board(9, 9, pattern);
		}
	}
}
